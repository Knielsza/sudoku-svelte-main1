/**
 * ソルブ失敗時の種別
 * invalidLength 配列のサイズが違う
 * noEmpty 空きマスがない
 * duplicated 重複がある
 * unsolvable 解けない
 */
export declare const SolveStatus: {
    readonly invalidLength: 1;
    readonly noEmpty: 2;
    readonly duplicated: 3;
    readonly unsolvable: 4;
    readonly outOfRange: 5;
};
export type SolveStatus = typeof SolveStatus[keyof typeof SolveStatus];
/**
 * ソルブ成功したときの戻り値
 */
export type SolveSuccess = {
    success: true;
    solution: number[];
};
/**
 * ソルブ失敗したときの戻り値
 */
export type SolveFailed = {
    success: false;
    status: SolveStatus;
};
export type SolveResult = SolveSuccess | SolveFailed;
/**
 * 数独を解く
 * @param numArray 数独を表す配列
 * @returns succes: true の場合 answer にソルブ済の配列が入ります。
 * success: false なら、 status にステータスコードが入ります。
 */
export declare const solve: (numArray: number[]) => SolveResult;
